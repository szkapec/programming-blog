[{"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\routes\\IsLoggedInRoute.js":"1","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\actions\\auth.actions.js":"2","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\App.js":"3","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\routes\\PrivateRoute.js":"4","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\Spinner.js":"5","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\LangindPage.js":"6","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\index.js":"7","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\components\\Footer.js":"8","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\middleware\\setAuthenticationToken.js":"9","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\LoginPage.js":"10","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\RegisterPage.js":"11","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\store.js":"12","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\reducers\\users.reducer.js":"13","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\constants\\users.contants.js":"14","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\components\\Navbar.js":"15","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\reducers\\auth.reducer.js":"16","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\Dashboard.js":"17","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\ContactPage.js":"18","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\ChangePassword.js":"19","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\constants\\auth.constants.js":"20","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\components\\ErrorMessage.js":"21","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\components\\PasswordChangeMessage.js":"22","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\constants\\posts.constants.js":"23","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\AddPost.js":"24","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\actions\\posts.actions.js":"25","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\ChangeProfile.js":"26","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\actions\\users.actions.js":"27","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\AccountPage.js":"28","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\UserPostsWrapper\\UserPostsWrapper.js":"29","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\UserPostsWrapper\\UserPost.js":"30","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\UsersPage.js":"31","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\Users\\UsersWrapper.js":"32","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\Users\\User.js":"33","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\UserProfile.js":"34","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\Topics.js":"35","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\TopicPosts\\TopicPostsWrapper.js":"36","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\TopicPosts\\TopicPost.js":"37","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\reducers\\posts.reducer.js":"38","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\TopicsPage.js":"39","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\Comments\\CommentsWrapper.js":"40","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\Comments\\Comment.js":"41","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\reducers\\index.js":"42"},{"size":531,"mtime":1606844587702,"results":"43","hashOfConfig":"44"},{"size":4204,"mtime":1607712048461,"results":"45","hashOfConfig":"44"},{"size":2437,"mtime":1607869861433,"results":"46","hashOfConfig":"44"},{"size":453,"mtime":1606850776891,"results":"47","hashOfConfig":"44"},{"size":248,"mtime":1606756736133,"results":"48","hashOfConfig":"44"},{"size":654,"mtime":1607868165329,"results":"49","hashOfConfig":"44"},{"size":219,"mtime":1606505557719,"results":"50","hashOfConfig":"44"},{"size":151,"mtime":1606506123391,"results":"51","hashOfConfig":"44"},{"size":284,"mtime":1606566872960,"results":"52","hashOfConfig":"44"},{"size":3129,"mtime":1607873707055,"results":"53","hashOfConfig":"44"},{"size":5785,"mtime":1607712009180,"results":"54","hashOfConfig":"44"},{"size":382,"mtime":1606560353193,"results":"55","hashOfConfig":"44"},{"size":876,"mtime":1607111219876,"results":"56","hashOfConfig":"44"},{"size":425,"mtime":1607110082754,"results":"57","hashOfConfig":"44"},{"size":7529,"mtime":1607888297791,"results":"58","hashOfConfig":"44"},{"size":2805,"mtime":1607117202094,"results":"59","hashOfConfig":"44"},{"size":1494,"mtime":1607883268132,"results":"60","hashOfConfig":"44"},{"size":2284,"mtime":1607883146537,"results":"61","hashOfConfig":"44"},{"size":5482,"mtime":1606859824944,"results":"62","hashOfConfig":"44"},{"size":600,"mtime":1607111970265,"results":"63","hashOfConfig":"44"},{"size":370,"mtime":1606857217985,"results":"64","hashOfConfig":"44"},{"size":364,"mtime":1606857540092,"results":"65","hashOfConfig":"44"},{"size":887,"mtime":1607123318837,"results":"66","hashOfConfig":"44"},{"size":5217,"mtime":1607889520534,"results":"67","hashOfConfig":"44"},{"size":8870,"mtime":1607881321249,"results":"68","hashOfConfig":"44"},{"size":3650,"mtime":1607874187957,"results":"69","hashOfConfig":"44"},{"size":2186,"mtime":1607608050437,"results":"70","hashOfConfig":"44"},{"size":1721,"mtime":1607868235126,"results":"71","hashOfConfig":"44"},{"size":241,"mtime":1607109532450,"results":"72","hashOfConfig":"44"},{"size":2006,"mtime":1607879356772,"results":"73","hashOfConfig":"44"},{"size":2911,"mtime":1607891698432,"results":"74","hashOfConfig":"44"},{"size":231,"mtime":1606949517488,"results":"75","hashOfConfig":"44"},{"size":524,"mtime":1607463294273,"results":"76","hashOfConfig":"44"},{"size":2483,"mtime":1607881514647,"results":"77","hashOfConfig":"44"},{"size":5420,"mtime":1607881103587,"results":"78","hashOfConfig":"44"},{"size":535,"mtime":1607710213272,"results":"79","hashOfConfig":"44"},{"size":4226,"mtime":1607879904931,"results":"80","hashOfConfig":"44"},{"size":1661,"mtime":1607711922307,"results":"81","hashOfConfig":"44"},{"size":5020,"mtime":1607891392820,"results":"82","hashOfConfig":"44"},{"size":306,"mtime":1607174332403,"results":"83","hashOfConfig":"44"},{"size":2368,"mtime":1607891381562,"results":"84","hashOfConfig":"44"},{"size":227,"mtime":1606754802909,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"13f4z88",{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"89"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"89"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"89"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"89"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"89"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"89"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"89"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"89"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"89"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\routes\\IsLoggedInRoute.js",["188"],"import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport RegisterPage from '../pages/RegisterPage';\r\nconst IsLoggedInRoute = ({component: Component, auth: {isLoggedIn}, ...rest}) => {\r\n    console.log(isLoggedIn)\r\n    return (\r\n    <Route {...rest} render={props => isLoggedIn?(<Redirect to=\"/\"/>) : (<Component {...props}/>)}/>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(IsLoggedInRoute)\r\n",["189","190"],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\actions\\auth.actions.js",["191","192","193"],"import { AUTH_FORM_SUCCESS, AUTH_FORM_FAIL, AUTH_ERROR, USER_IS_LOADED,\r\n     LOG_OUT, CHECK_PASSWORDS, CHANGE_PASSWORD, CHANGE_PASSWORD_FAIL, CHAGE_USER_DATA_FAILED, CHANGE_PROFILE, GET_USERS, SEARCH_BY_USERNAME} from '../constants/auth.constants';\r\nimport axios from 'axios';\r\nimport setAuthenticationToken from '../middleware/setAuthenticationToken';\r\n\r\nconst API = 'https://backend-post.herokuapp.com';\r\n\r\nexport const userLoaded = () => async (dispatch) => {\r\n    if(localStorage.getItem(\"token\")) {\r\n        setAuthenticationToken(localStorage.getItem(\"token\"))\r\n    }\r\n    try {\r\n      const response = await axios.get(`${API}/api/users`) //znajdz tego konkretnego uzytkownika\r\n      dispatch({\r\n          type: USER_IS_LOADED,\r\n          payload: response.data\r\n      })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: AUTH_FORM_FAIL,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const registerUser = (userData) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        };\r\n        const body = JSON.stringify(userData) //caly obiekt imie naziwsko email haslo itd\r\n        const response = await axios.post(`${API}/api/users/register`, body, config);\r\n\r\n        dispatch({ //wysyla do reducera\r\n            type: AUTH_FORM_SUCCESS,\r\n            payload: response.data\r\n        })\r\n        dispatch(userLoaded())\r\n\r\n    } catch (error) {\r\n        dispatch({ //wysyla do reducera\r\n            type: AUTH_FORM_FAIL,\r\n            payload: error\r\n        })\r\n    }\r\n}\r\n\r\nexport const loginUser = (userData) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify(userData) //caly obiekt imie naziwsko email haslo itd\r\n        const response = await axios.post(`${API}/api/users/login`, body, config);\r\n        dispatch({\r\n            type: AUTH_FORM_SUCCESS,\r\n            payload: response.data\r\n        })\r\n        dispatch(userLoaded())\r\n    } catch (error) {\r\n        dispatch({\r\n            type: AUTH_FORM_FAIL,\r\n            payload: error\r\n        })\r\n    }\r\n}\r\n\r\nexport const checkPasswords = (passwordToCheck) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        };\r\n        const body = JSON.stringify({passwordToCheck})\r\n        const res = await axios.put(`${API}/api/users/check_actual_password`, body, config)\r\n        dispatch({\r\n            type: CHECK_PASSWORDS,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CHANGE_PASSWORD_FAIL,\r\n            payload: error\r\n        })\r\n    }\r\n}\r\nexport const changePassword = (newPassword) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        };\r\n        const body = JSON.stringify({newPassword})\r\n        const res = await axios.put(`${API}/api/users/change_user_password`, body, config)\r\n        dispatch({\r\n            type: CHANGE_PASSWORD,\r\n            payload: res.data\r\n        })\r\n        dispatch(userLoaded())\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CHANGE_PASSWORD_FAIL,\r\n            payload: error\r\n        })\r\n    }\r\n}\r\n\r\nexport const changeUserData = (changeUserData, userDataToChange) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        };\r\n        const body = JSON.stringify({changeUserData})\r\n        const res = await axios.put(`${API}/api/users/change_user_data/${userDataToChange}`, body, config)\r\n        dispatch({\r\n            type: CHANGE_PROFILE,\r\n            payload: res.data\r\n        })\r\n        alert(\"Dane zosytały zmienione\")\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CHAGE_USER_DATA_FAILED,\r\n            payload: error\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    dispatch({type:LOG_OUT});\r\n}\r\n","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\App.js",["194"],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\Spinner.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\LangindPage.js",["195"],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\index.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\components\\Footer.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\middleware\\setAuthenticationToken.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\LoginPage.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\RegisterPage.js",["196"],"import React, { useState } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {registerUser} from '../actions/auth.actions';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nconst RegisterPage = ({registerUser, error }) => {\r\n    const [hasPasswordShowed, setShowPassword] = useState(false);\r\n\r\n    const [userData, setUserData] = useState({\r\n      name: \"\",\r\n      lastName: \"\",\r\n      userName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n    const [errorPassword, setErrorPassword] = useState('')\r\n  \r\n    const { name, lastName, userName, email, password } = userData;\r\n  \r\n    const onChange = (e) =>\r\n      setUserData({ ...userData, [e.target.name]: e.target.value });\r\n  \r\n    const register = () => {\r\n        let flag = true;\r\n        setErrorPassword('')\r\n        const reg = /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*(\\.\\w{2,})+$/;\r\n        if (!reg.test(email)) {\r\n          flag = false;\r\n          setErrorPassword(\"Wypełnij poprawnie pole z emailem\");\r\n          return;\r\n        }\r\n        if(password!==repeatPassword){\r\n          flag = false;\r\n          setErrorPassword('Hasło nie pasuje')\r\n          return;\r\n        }\r\n        if(name.length<2 || lastName.length<2 || userName.length<2 || password.length<2){\r\n          flag = false;\r\n          setErrorPassword('Za krótka nazwa')\r\n          return;\r\n        }\r\n        if(password.indexOf(\"-\")>0 || password.indexOf(\"=\")>0){\r\n          flag = false;\r\n          setErrorPassword('Niezgodne znaki')\r\n          return;\r\n        }\r\n        if(flag){\r\n          registerUser(userData)\r\n        }\r\n    \r\n    }\r\n\r\n    return (\r\n      <main className=\"register-page-wrapper\">\r\n        <form className=\"register-section\">\r\n          <div className=\"inputs-wrapper\">\r\n            <header className=\"register-header-wrapper\">\r\n              <p className=\"font__p p__size register-header\">\r\n                <i className=\"fas fa-users users-icon app_color_font\"></i>\r\n                Zarejestruj się\r\n              </p>\r\n            </header>\r\n  \r\n           <div className=\"container-register\">\r\n           <div className=\"label-wrapper\">\r\n              <label className=\"label__register p__size\">Imię:</label>\r\n            </div>\r\n  \r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <div className=\"label-wrapper\">\r\n              <label className=\"label__register\">Nazwisko:</label>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              name=\"lastName\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <div className=\"label-wrapper\">\r\n              <label className=\"label__register\">Nazwa:</label>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"userName\"\r\n              value={userName}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <div className=\"label-wrapper\">\r\n              <label className=\"label__register\">E-mail:</label>\r\n            </div>\r\n            <input\r\n              name=\"email\"\r\n              value={email}\r\n              type=\"email\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <div className=\"label-wrapper\">\r\n              <label className=\"label__register\">Hasło:</label>\r\n            </div>\r\n            <input\r\n              name=\"password\"\r\n              type={hasPasswordShowed ? \"text\" : \"password\"}\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <div className=\"label-wrapper\">\r\n              <label className=\"label__register\">Powtórz hasło:</label>\r\n            </div>\r\n            <input\r\n              name=\"repeatPassword\"\r\n              type={hasPasswordShowed ? \"text\" : \"password\"}\r\n              value={repeatPassword}\r\n              onChange={(e) => setRepeatPassword(e.target.value)}\r\n            />\r\n  \r\n            <i\r\n              onClick={() => setShowPassword(!hasPasswordShowed)}\r\n              className={hasPasswordShowed ? \"fas fa-eye\" : \"fas fa-eye-slash\"}\r\n            ></i>\r\n                <div\r\n              onClick={() => register()}\r\n            >\r\n              <p className=\"button-register\">Zarejestruj się</p>\r\n            </div>\r\n           </div>\r\n\r\n            {/* <div className=\"label-wrapper\">\r\n              <p className=\"p__size font__p password__info\">\r\n                <i className=\"fas fa-user-check app_color_font\"></i> Password must\r\n                have at least 6 letters\r\n              </p>\r\n            </div> */}\r\n  \r\n            {errorPassword && (errorPassword !== null || errorPassword !== \"\" || errorPassword !== {}) && (\r\n                <ErrorMessage errorMessage={errorPassword}/>\r\n            )}\r\n  \r\n            {error && (error !== null || error !== \"\" || error !== {}) && (\r\n                <ErrorMessage errorMessage=\"Coś poszło nie tak\"/>\r\n            )}\r\n  \r\n        \r\n          </div>\r\n        </form>\r\n      </main>\r\n    );\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    error: state.auth.errors,\r\n  });\r\n\r\nexport default connect(mapStateToProps, {registerUser})(RegisterPage)\r\n","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\store.js",[],["197","198"],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\reducers\\users.reducer.js",["199"],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\constants\\users.contants.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\components\\Navbar.js",["200","201"],"import React, { useState } from 'react'\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { logOut } from '../actions/auth.actions';\r\nimport styled from 'styled-components';\r\nimport './scss/Navbar.css';\r\nconst Navbar = ({ auth: { isLoggedIn }, logOut }) => {\r\n  let [isSidebar, setSidebar] = useState(true);\r\n\r\n\r\n  return (\r\n    <nav>\r\n      <BarStyleMenu>\r\n        <NavLink to=\"/\" className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)} \r\n         exact activeStyle={{\r\n          color: '#2980b9',\r\n          borderBottom: '1px solid #2980b9'\r\n        }}>\r\n          \r\n        <i className=\"fas fa-home\"></i>\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/users\" className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)}\r\n        style={{ display: isLoggedIn ? \"flex\" : \"none\" }} activeStyle={{\r\n          color: '#2980b9',\r\n          borderBottom: '1px solid #2980b9'\r\n        }}>\r\n          <i className=\"fas fa-users\"></i>\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/topics\" className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)} activeStyle={{\r\n          color: '#2980b9',\r\n          borderBottom: '1px solid #2980b9'\r\n        }}>\r\n          <i className=\"fas fa-comments\"></i>\r\n        </NavLink>\r\n\r\n        <NavLink\r\n          to=\"/login\"\r\n          className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)} activeStyle={{\r\n            color: '#2980b9',\r\n            borderBottom: '1px solid #2980b9'\r\n          }}\r\n          style={{ display: isLoggedIn ? \"none\" : \"flex\" }}\r\n        >\r\n          <i className=\"fas fa-long-arrow-alt-right\"></i>\r\n          </NavLink>\r\n\r\n        <NavLink\r\n          to=\"/register\"\r\n          className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)} activeStyle={{\r\n            color: '#2980b9',\r\n            borderBottom: '1px solid #2980b9'\r\n          }}\r\n          style={{ display: isLoggedIn ? \"none\" : \"flex\" }}\r\n        >\r\n          <i className=\"fas fa-sign-in-alt\"></i>\r\n          </NavLink>\r\n\r\n        <NavLink\r\n          to=\"/account\"\r\n          className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)} activeStyle={{\r\n            color: '#2980b9',\r\n            borderBottom: '1px solid #2980b9'\r\n          }}\r\n          style={{ display: isLoggedIn ? \"flex\" : \"none\" }}\r\n        >\r\n        <i className=\"fas fa-address-card\"></i>\r\n        </NavLink>\r\n\r\n        <NavLink\r\n          to=\"/dashboard\"\r\n          className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)} activeStyle={{\r\n            color: '#2980b9',\r\n            borderBottom: '1px solid #2980b9'\r\n          }}\r\n          style={{ display: isLoggedIn ? \"flex\" : \"none\" }}\r\n        >\r\n        <i className=\"fas fa-user\"></i>\r\n        </NavLink>\r\n\r\n        <NavLink\r\n          to=\"/add-post\"\r\n          className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)} activeStyle={{\r\n            color: '#2980b9',\r\n            borderBottom: '1px solid #2980b9'\r\n          }}\r\n          style={{ display: isLoggedIn ? \"flex\" : \"none\" }}\r\n        >\r\n          <i className=\"fas fa-edit\"></i>\r\n        </NavLink>\r\n\r\n        <NavLink\r\n          to=\"/login\"\r\n          className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)} activeStyle={{\r\n            color: '#2980b9',\r\n            borderBottom: '1px solid #2980b9'\r\n          }}\r\n          onClick={() => logOut()}\r\n          style={{ display: isLoggedIn ? \"flex\" : \"none\" }}\r\n        >\r\n          <i className=\"fas fa-sign-out-alt\"></i>\r\n        </NavLink>\r\n      </BarStyleMenu>\r\n\r\n\r\n      <BarStyle isSidebar={isSidebar} className=\"menu\" >\r\n\r\n        <div><i className={\"fas fa-ellipsis-h\"} onClick={() => setSidebar(!isSidebar)}></i></div>\r\n      </BarStyle>\r\n      <NavStyle isSidebar={isSidebar} className=\"main__nav\">\r\n        <div className=\"nav-container\">\r\n          <Link to=\"/\" className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)}>\r\n            Główna <i className=\"fas fa-home\"></i>\r\n          </Link>\r\n\r\n          <Link to=\"/users\" className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)}\r\n           style={{ display: isLoggedIn ? \"flex\" : \"none\" }}>\r\n            Użytkownicy <i className=\"fas fa-users\"></i>\r\n          </Link>\r\n\r\n          <Link to=\"/topics\" className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)}\r\n          >\r\n            Posty <i className=\"fas fa-comments\"></i>\r\n          </Link>\r\n\r\n          <Link\r\n            to=\"/login\"\r\n            className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)}\r\n            style={{ display: isLoggedIn ? \"none\" : \"flex\" }}\r\n          >\r\n            Zaloguj <i className=\"fas fa-long-arrow-alt-right\"></i>\r\n          </Link>\r\n\r\n          <Link\r\n            to=\"/register\"\r\n            className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)}\r\n            style={{ display: isLoggedIn ? \"none\" : \"flex\" }}\r\n          >\r\n            Zarejestruj się <i className=\"fas fa-sign-in-alt\"></i>\r\n          </Link>\r\n\r\n          <Link\r\n            to=\"/account\"\r\n            className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)}\r\n            style={{ display: isLoggedIn ? \"flex\" : \"none\" }}\r\n          >\r\n            Konto <i className=\"fas fa-address-card\"></i>\r\n          </Link>\r\n\r\n          <Link\r\n            to=\"/dashboard\"\r\n            className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)}\r\n            style={{ display: isLoggedIn ? \"flex\" : \"none\" }}\r\n          >\r\n            Profil <i className=\"fas fa-user\"></i>\r\n          </Link>\r\n\r\n          <Link\r\n            to=\"/add-post\"\r\n            className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)}\r\n            style={{ display: isLoggedIn ? \"flex\" : \"none\" }}\r\n          >\r\n            Dodaj post <i className=\"fas fa-edit\"></i>\r\n          </Link>\r\n\r\n          <Link\r\n            to=\"/login\"\r\n            className=\"href__style__remove nav__link\" onClick={() => setSidebar(true)}\r\n            onClick={() => logOut()}\r\n            style={{ display: isLoggedIn ? \"flex\" : \"none\" }}\r\n          >\r\n            Wyloguj <i className=\"fas fa-sign-out-alt\"></i>\r\n          </Link>\r\n        </div>\r\n      </NavStyle>\r\n    </nav>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { logOut })(Navbar)\r\n\r\n\r\nconst NavStyle = styled.div`\r\n  transform: ${props => props.isSidebar ? 'translateY(-120%)' : 'translateY(0%)'};\r\n  transition: .6s ease-in-out;\r\n\r\n  @media (min-width: 1200px) {\r\n    transform: translate(0%)\r\n  }\r\n`\r\nconst BarStyleMenu = styled.div`\r\n    \r\n    display: none;\r\n    a {\r\n      text-decoration: none;\r\n    }\r\n    @media(min-width: 290px){\r\n      position: fixed;\r\n      top: 0;\r\n      z-index: 99999;\r\n      display: flex;\r\n      left: 10px;\r\n      right: 100px;\r\n      width: 75%;\r\n      align-items: center;\r\n      height: 45px;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n      a {\r\n        color: black;\r\n     \r\n      }\r\n    }\r\n    @media(min-width:550px) {\r\n      width: 85%;\r\n      left:30px;\r\n      display: flex;\r\n      font-size: 20px;\r\n    }\r\n    @media(min-width: 1200px) {\r\n      display: none;\r\n    }\r\n   \r\n`\r\n\r\nconst BarStyle = styled.div`\r\n  i {\r\n    transition: .5s ease-in-out;\r\n    transform: ${props => !props.isSidebar ? 'rotate(90deg)' : 'rotate(0deg)'}\r\n  }\r\n\r\n`","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\reducers\\auth.reducer.js",["202"],"import { AUTH_FORM_SUCCESS, AUTH_FORM_FAIL, AUTH_ERROR, USER_IS_LOADED, LOG_OUT, CHECK_PASSWORDS, \r\n    CHANGE_PASSWORD, CHANGE_PASSWORD_FAIL, CHAGE_USER_DATA_FAILED, CHANGE_PROFILE, GET_USERS, SEARCH_BY_USERNAME} from '../constants/auth.constants';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    users: {},\r\n    user: {},\r\n    isLoggedIn: false,\r\n    isAllowedToChangePassword: false,\r\n    isPasswordChanged: false,\r\n    isLoading: false,\r\n};\r\n\r\nconst auth = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case GET_USERS: \r\n        case SEARCH_BY_USERNAME:\r\n            return {\r\n                ...state,\r\n                users: [...payload],\r\n                isLoggedIn: true,\r\n                isAllowedToChangePassword: false,\r\n                isPasswordChanged: false,\r\n                isLoading: false,\r\n                errors: null,\r\n            }\r\n        case AUTH_FORM_SUCCESS:\r\n            localStorage.setItem('token', payload.token)\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isLoggedIn: true,\r\n                isAllowedToChangePassword: false,\r\n                isPasswordChanged: false,\r\n                isLoading: false,\r\n                errors: {},\r\n              };\r\n        case CHECK_PASSWORDS: \r\n              return {\r\n                  ...state,\r\n                  ...payload,\r\n                  isAllowedToChangePassword: true,\r\n              }\r\n        case CHANGE_PROFILE: \r\n              return {\r\n                  ...state,\r\n                  ...payload,\r\n                  isLoggedIn: true,\r\n                  isAllowedToChangePassword: false,\r\n                  isPasswordChanged: false,\r\n                  isLoading: false,\r\n                  errors: {},\r\n              }\r\n        case AUTH_FORM_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOG_OUT:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                user: {},\r\n                isLoggedIn: false,\r\n                isAllowedToChangePassword: false,\r\n                isPasswordChanged: false,\r\n                isLoading: false,\r\n            }\r\n        case CHANGE_PASSWORD_FAIL:\r\n        case CHAGE_USER_DATA_FAILED: \r\n        return {\r\n            ...state,\r\n            errors: payload,\r\n        }\r\n        case USER_IS_LOADED:\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                user: payload,\r\n                isLoggedIn: true,\r\n                isAllowedToChangePassword: false,\r\n                isPasswordChanged: false,\r\n                isLoading: false,\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default auth","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\Dashboard.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\ContactPage.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\ChangePassword.js",["203"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { checkPasswords, changePassword } from '../actions/auth.actions';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport PasswordChangeMessage from '../components/PasswordChangeMessage';\r\n\r\n\r\nconst ChangePassword = ({ auth: { errors, isAllowedToChangePassword }, checkPasswords, changePassword }) => {\r\n\r\n    let [areNotPasswordsFullfield, setNotArePasswordsFullfield] = useState(false)\r\n    let [arePasswordsWrong, setArePasswordsWrong] = useState(false)\r\n    let [isSubmitted, setIsSubmitted] = useState(false)\r\n    let [formData, setFormData] = useState({\r\n        firstPassword: '',\r\n        secondPassword: '',\r\n        newPassword: '',\r\n    })\r\n    let { firstPassword, secondPassword, newPassword } = formData\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const submitData = e => {\r\n        if (firstPassword !== secondPassword) {\r\n            setArePasswordsWrong(true);\r\n            setNotArePasswordsFullfield(false);\r\n        } else if (firstPassword === '' || firstPassword === null || secondPassword === \"\" || secondPassword === null) {\r\n            setNotArePasswordsFullfield(true);\r\n        } else {\r\n            checkPasswords(firstPassword)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"change-profile-page-wrapper\">\r\n\r\n{isAllowedToChangePassword === false && (\r\n        <form className=\"change-profile-section\">\r\n          <div className=\"change-password-input-wrapper\">\r\n            <label className=\"change-password-label p__size font__p font__bold\">\r\n              Type actual password\r\n            </label>\r\n            <input\r\n              className=\"change-password-input\"\r\n              placeholder=\"Type Something...\"\r\n              type=\"text\"\r\n              value={firstPassword}\r\n              name=\"firstPassword\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"change-password-input-wrapper\">\r\n            <label className=\"change-password-label p__size font__p font__bold\">\r\n              Type again password\r\n            </label>\r\n            <input\r\n              className=\"change-password-input\"\r\n              placeholder=\"Type Something...\"\r\n              type=\"text\"\r\n              value={secondPassword}\r\n              name=\"secondPassword\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {areNotPasswordsFullfield && (\r\n            <ErrorMessage errorMessage=\"You haven't fullfiled some input\" />\r\n          )}\r\n\r\n          {arePasswordsWrong && (\r\n            <ErrorMessage errorMessage=\"Passwords are wrong\" />\r\n          )}\r\n\r\n          {errors === false && (errors !== {} || errors !== null) && (\r\n            <ErrorMessage errorMessage=\"Something went wrong...\" />\r\n          )}\r\n          <div className=\"password-page-button\" onClick={(e) =>  submitData(e)}>\r\n            Submit\r\n          </div>\r\n        </form>\r\n      )}\r\n\r\n            \r\n            {isAllowedToChangePassword === true && (\r\n                <form className=\"change-profile-section\">\r\n                    <div className=\"change-password-input-wrapper\">\r\n                        <label className=\"change-password-label p__size font__p font__bold\">\r\n                            Type New Password\r\n                   </label>\r\n\r\n                        <input\r\n                            placeholder=\"Type New Password...\"\r\n                            value={newPassword}\r\n                            name=\"newPassword\"\r\n                            onChange={(e) => onChange(e)}\r\n                            type=\"text\"\r\n                        />\r\n\r\n                        <div\r\n                            className=\"password-page-button\"\r\n                            style={{\r\n                                marginTop: \".5em\",\r\n                            }}\r\n                            onClick={(e) => {\r\n                                changePassword(newPassword);\r\n                                // setIsSubmitted(true);\r\n                               \r\n                            }}\r\n                        >\r\n                            Submit\r\n                   </div>\r\n                    </div>\r\n                </form>\r\n            )}\r\n            {/* {isAllowedToChangePassword && errors && (\r\n                <ErrorMessage errorMessage=\"Password hasn't changed, something went wrong...\" />\r\n            )} */}\r\n\r\n            {arePasswordsWrong && (\r\n                <ErrorMessage errorMessage=\"Password are wrong\" />\r\n            )}\r\n\r\n            {/* {\r\n                isAllowedToChangePassword !== false && (isAllowedToChangePassword !== {} || isAllowedToChangePassword !== null) && (\r\n                    <ErrorMessage errorMessage=\"Udało sie!\"/>\r\n                )\r\n            } */}\r\n            {\r\n                isAllowedToChangePassword && errors  && isSubmitted && (\r\n                    <PasswordChangeMessage message=\"Password hasnt changed\"/>\r\n                )\r\n            }\r\n            {\r\n                isAllowedToChangePassword && !errors && isSubmitted && (\r\n                    <PasswordChangeMessage message=\"Password has changed\"/>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { checkPasswords, changePassword })(ChangePassword)\r\n","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\constants\\auth.constants.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\components\\ErrorMessage.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\components\\PasswordChangeMessage.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\constants\\posts.constants.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\AddPost.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\actions\\posts.actions.js",["204","205","206"],"import {MAKE_POST ,POST_ERROR ,GET_USER_POSTS ,REMOVE_POST ,GET_POSTS ,GET_POST ,CLEAR_POSTS ,CLEAR_POST, SEARCH_TOPICS ,MOST_LIKED_POSTS\r\n    ,MOST_COMMENTED ,ADD_LIKE ,THE_MOST_RECENT_POSTS ,REMOVE_LIKE ,ADD_COMMENT ,GET_POST_BY_USER_ID ,LIKE_COMMENT ,REMOVE_LIKE_FROM_COMMENT, REMOVE_COMMENT} from '../constants/posts.constants';\r\nimport axios from 'axios';\r\nimport { getUserPosts, getUsers } from './users.actions';\r\nconst API = 'https://backend-post.herokuapp.com';\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`${API}/api/posts/posts`);\r\n        dispatch({\r\n           type: GET_POSTS, payload: res.data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\nexport const getMostRecentPosts = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`${API}/api/posts/posts/the_most_recent`);\r\n        dispatch({\r\n           type: THE_MOST_RECENT_POSTS, payload: res.data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\nexport const getMostCommentedPosts = () => async (dispatch) => { //dziala\r\n    try {\r\n        const res = await axios.get(`${API}/api/posts/posts/the_most_commented`);\r\n        dispatch({\r\n           type: MOST_COMMENTED, payload: res.data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\nexport const theMostLikedPosts = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`${API}/api/posts/posts/most_liked`);\r\n        dispatch({\r\n           type: MOST_LIKED_POSTS, payload: res.data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\nexport const getPost = (post_id) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`${API}/api/posts/single_post/${post_id}`);\r\n        dispatch({\r\n           type: GET_POST, payload: res.data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\n\r\nexport const clearPost = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n           type: CLEAR_POST,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\nexport const clearPosts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n           type: CLEAR_POSTS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\nexport const createPost = (textOfThePost, title, image) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({textOfThePost, title, image});\r\n        const res = await axios.post(`${API}/api/posts/add`, body, config)\r\n\r\n        dispatch({type: MAKE_POST, payload: res.data})\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createComment = (textOfTheComment, post_id) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({textOfTheComment});\r\n        const res = await axios.put(`${API}/api/posts/add_comment/${post_id}`, body, config)\r\n\r\n        dispatch({type: ADD_COMMENT, payload: res.data})\r\n        dispatch(getPost(post_id))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\n\r\nexport const searchTopics = (searchInput) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({searchInput});\r\n        const res = await axios.put(`${API}/api/posts/search_for_post`, body, config)\r\n\r\n        dispatch({type: SEARCH_TOPICS, payload: res.data})\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const addLikeToTopicPage = (post_id) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.put(`${API}/api/posts/likes/${post_id}`)\r\n        dispatch({type: ADD_LIKE, payload: res.data})\r\n        dispatch(getPost(post_id))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                error,\r\n                error_message: 'Nie jesteś zalogowany',\r\n            },\r\n        })\r\n    }\r\n}\r\n\r\nexport const addLike = (post_id, isOldest, isMostRecent, isMostCommented, isMostLiked, searchInput) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({searchInput});\r\n        const res = await axios.put(`${API}/api/posts/likes/${post_id}`, body, config)\r\n\r\n        dispatch({type: ADD_LIKE, payload: res.data})\r\n        if(isOldest){\r\n            dispatch(getPosts())\r\n        }\r\n        else if (isMostRecent){\r\n            dispatch(getMostRecentPosts())\r\n        }\r\n        else if (isMostCommented){\r\n            dispatch(getMostCommentedPosts())\r\n        }\r\n        else if(isMostLiked){\r\n            dispatch(theMostLikedPosts())\r\n        }\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\nexport const addLikeToComment = (post_id, comment_id) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.put(`${API}/api/posts/like_comment/${post_id}/${comment_id}`, config)\r\n        dispatch({type: LIKE_COMMENT, payload: res.data})\r\n        dispatch(getPost(post_id))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const removePost = (post_id) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.delete(`${API}/api/posts/detele_post/${post_id}`)\r\n        dispatch({type: REMOVE_POST, payload: res.data})\r\n\r\n        dispatch(getUserPosts())\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\nexport const removeLikeFromPost = (post_id, like_id, isOldest, isMostRecent, isMostCommented, isMostLiked) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.delete(`${API}/api/posts/remove_like_from_post/${post_id}/${like_id}`, config)\r\n        dispatch({\r\n            type: REMOVE_LIKE,\r\n            payload: res.data,\r\n          });\r\n            dispatch(getPost(post_id))\r\n          if (isOldest) {\r\n            dispatch(getPosts());\r\n          } else if (isMostRecent) {\r\n            dispatch(getMostRecentPosts());\r\n          } else if (isMostCommented) {\r\n            dispatch(getMostCommentedPosts());\r\n          } else if (isMostLiked) {\r\n            dispatch(theMostLikedPosts());\r\n          }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\nexport const removeComment = (post_id, comment_id) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.delete(`${API}/api/posts/remove_comment/${post_id}/${comment_id}`, config)\r\n        dispatch({type: REMOVE_COMMENT, payload: res.data})\r\n        dispatch(getUserPosts())\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}\r\nexport const removeLikeFromComment = (post_id, comment_id, like_id) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.delete(`${API}/api/posts/remove_like_from_comment/${post_id}/${comment_id}/${like_id}`, config)\r\n        dispatch({type: REMOVE_LIKE_FROM_COMMENT, payload: res.data})\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: error,\r\n        })\r\n    }\r\n}","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\ChangeProfile.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\actions\\users.actions.js",["207","208","209"],"import { GET_USERS, GET_USER, SEARCH_USERS, CHANGE_EMAIL, USER_ERROR, GET_USER_POSTS, GET_POST_BY_USER_ID, SEARCH_BY_USERNAME, GET_USER_BY_ID} from '../constants/users.contants';\r\nimport axios from 'axios';\r\n\r\nconst API = 'https://backend-post.herokuapp.com';\r\n\r\n\r\nexport const getUserPosts = () => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`${API}/api/posts/user_posts`);\r\n      dispatch({ type: GET_USER_POSTS, payload: res.data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_ERROR,\r\n        payload: error,\r\n      });\r\n    }\r\n  };\r\n  \r\nexport const getUserPostsById = (user_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `${API}/api/posts/user_posts/${user_id}`\r\n    );\r\n    dispatch({ type: GET_POST_BY_USER_ID, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\nexport const getUsers = () => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`${API}/api/users/users`);\r\n      dispatch({ type: GET_USERS, payload: res.data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_ERROR,\r\n        payload: error,\r\n      });\r\n    }\r\n  };\r\n  \r\nexport const getUserById = (user_id) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${API}/api/users/get_user_by_id/${user_id}`\r\n      );\r\n      dispatch({ type: GET_USER_BY_ID, payload: res.data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_ERROR,\r\n        payload: error,\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const searchByUsername = (userNameFromSearch) => async (dispatch) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const body = JSON.stringify({ userNameFromSearch });\r\n      const response = await axios.put(\r\n        `${API}/api/users/search_by_username`,\r\n        body,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: SEARCH_BY_USERNAME,\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_ERROR,\r\n        payload: error,\r\n      });\r\n    }\r\n  };","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\AccountPage.js",["210"],"import React, {useEffect} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport { getUserPosts } from '../actions/users.actions';\r\nimport UserPostsWrapper from './UserPostsWrapper/UserPostsWrapper'\r\nimport './scss/Account/Account.css';\r\n\r\nconst AccountPage = ({getUserPosts, auth: {name,lastName,email,userName, avatar}, users: {profilePosts}}) => {\r\n\r\n\r\n    useEffect(() => {\r\n        getUserPosts();\r\n    },[])\r\n    return (\r\n        <div className=\"account-page-wrapper\">\r\n        <div className=\"data\">\r\n            <div className=\"data-items\">\r\n                <div className=\"your-account\">Twoje konto</div>\r\n                <div>\r\n                        Imię: {name}\r\n                </div>\r\n                <div>\r\n                        Nazwisko: {lastName}\r\n                </div>\r\n                <div>\r\n                        Nazwa użytkownika: {userName}\r\n                </div>\r\n                <div>\r\n                        email: {email}\r\n                </div>\r\n            </div>\r\n        </div>\r\n  \r\n        <div className=\"user-posts\">\r\n          <header className=\"user-posts-header\">\r\n            {profilePosts === [] || profilePosts === null || profilePosts === \"\" || profilePosts.length===0 ? (\r\n              <p className=\"user-posts-header\">\r\n              Nie masz jeszcze żadnych postów\r\n            </p>\r\n            ) : (\r\n              <p className=\"user-posts-header\">Twoje posty</p>\r\n            )}\r\n          </header>\r\n          <UserPostsWrapper posts={profilePosts}/>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    users: state.users,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUserPosts})(AccountPage)\r\n","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\UserPostsWrapper\\UserPostsWrapper.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\UserPostsWrapper\\UserPost.js",["211"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { removePost } from \"../../actions/posts.actions\";\r\nimport Spinner from \"../../Spinner\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst UserPost = ({ post, removePost, auth }) => {\r\n  return post === null || !post ? (\r\n    <div className=\"all-page-wrapper\">\r\n      <Spinner />\r\n    </div>\r\n  ) : (\r\n    <div className=\"user-post\">\r\n     \r\n\r\n      <div className=\"user-post-topic\">\r\n        \r\n        {post.image&& <div className=\"user-post-image\"><img src={post.image} alt=\"image post\"/></div>}\r\n        <div className=\"title\">{post.title}</div>\r\n        <div className=\"text\">{post.textOfThePost}</div>\r\n      </div>\r\n      <div className=\"user-post-date\">\r\n        <Moment format=\"HH:mm YYYY-MM-DD\">{post.data}</Moment>\r\n      </div>\r\n      <div className=\"post__likes__comments\">\r\n        <div className=\"post__likes__comments__deleteBtn\">\r\n          <div className=\"user-post-likes\">\r\n            <i className=\"far fa-thumbs-up\"></i> {post.likes.length}\r\n          </div>\r\n          <div className=\"user-post-comments\">\r\n            <i className=\"far fa-comment\"></i>\r\n            {post.comments.length}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: post.user === auth.user._id ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"removePostBtn app_color_background\"\r\n              onClick={() => removePost(post._id)}\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"link-to-post-page-button\">\r\n            <Link to={`/topics/topic/${post._id}`}>Zobacz więcej</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  removePost,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPost);","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\UsersPage.js",["212"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getUsers, searchByUsername } from '../actions/users.actions';\r\nimport UserWrapper from './Users/UsersWrapper';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst UsersPage = ({ getUsers, searchByUsername, auth }) => {\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n    }, [])\r\n\r\n    let [searchedUsername, setSearchedUsername] = useState('')\r\n    const searchForUser = (e) => {\r\n        e.preventDefault();\r\n        if (searchedUsername === '' || searchedUsername === null) {\r\n            getUsers();\r\n        } else {\r\n            searchByUsername(searchedUsername);\r\n            setSearchedUsername('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledComponentsTopicSearch>\r\n            <header className=\"search-user\">\r\n                <p>Wyszukiwarka użytkowników</p>\r\n                <form>\r\n                    <input placeholder=\"Wyszukaj...\" value={searchedUsername} onChange={(e) => setSearchedUsername(e.target.value)} />\r\n                    <button onClick={(e) => searchForUser(e)}>\r\n                        wyszukaj\r\n                    </button>\r\n                </form>\r\n            </header>\r\n            <div className=\"users-wrapper\">\r\n                <UserWrapper users={auth.users} key={auth._id} />\r\n            </div>\r\n        </StyledComponentsTopicSearch>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { getUsers, searchByUsername })(UsersPage)\r\n\r\n\r\nconst StyledComponentsTopicSearch = styled.div`\r\n    width: 90%;\r\n    max-width:700px;\r\n    margin:  auto;\r\n   \r\n    header {\r\n        margin: 0 auto;\r\n        text-align:center\r\n    }\r\n    input, button {\r\n        border: 1px solid black;\r\n        padding: 5px 15px;\r\n        margin: 10px 0;\r\n        background-color: #fff;\r\n        color: black;\r\n        transition: .3s ease-in-out;\r\n    }\r\n    button:hover {\r\n            background-color: #346589;\r\n            color: white;\r\n    }\r\n    \r\n    .users-wrapper {\r\n        .topic-wrapper {\r\n            margin: 20px 0;\r\n        }\r\n        img {\r\n            width: 50px;\r\n            height: 50px;\r\n            border-radius: 50%;\r\n        }\r\n\r\n        .topic-user {\r\n            display: flex;\r\n            align-items: center;\r\n            \r\n            p {\r\n                margin-left: 20px;\r\n            }\r\n        }\r\n        .topic-section {\r\n            margin: 5px 0 30px 0;\r\n            border: 1px solid #e9e9e9;\r\n            background-color: #fff;\r\n            padding: 5px 10px;\r\n            max-width: 100px;\r\n            text-align: center;\r\n            transition: .3s ease-in-out;\r\n            &:hover {\r\n                text-decoration: underline;\r\n\r\n            }\r\n\r\n            a {\r\n                text-decoration: none;\r\n                color: black;;\r\n            }\r\n\r\n        }\r\n    }\r\n`","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\Users\\UsersWrapper.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\Users\\User.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\UserProfile.js",["213","214"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {getUserById} from '../actions/users.actions';\r\nimport { getUserPostsById , getUserPosts } from \"../actions/users.actions\";\r\nimport Spinner from \"../Spinner\";\r\nimport UserPostsWrapper from \"./UserPostsWrapper/UserPostsWrapper\";\r\nimport styled from 'styled-components';\r\n\r\nconst UserProfile = ({\r\n  users,\r\n  userProfile,\r\n  posts: { post },\r\n  match,\r\n  getUserById,\r\n  getUserPostsById,\r\n}) => {\r\n  useEffect(() => {\r\n    getUserById(match.params.user_id);\r\n    getUserPostsById(match.params.user_id);\r\n  }, []);\r\n\r\n  return users.profilePosts === [] ||\r\n    userProfile === null ||\r\n    post === users.profilePosts ? (\r\n    <div className=\"all-page-wrapper\">\r\n      <Spinner />\r\n    </div>\r\n  ) :  (\r\n    <StyledContainerAccount className=\"account-page-wrapper\">\r\n      <div className=\"data\">\r\n        <img src={userProfile.avatar} alt=\"profile avatar\" />\r\n        \r\n        <div className=\"data-items\">\r\n                <div>\r\n                        Imię: {userProfile.name}\r\n                </div>\r\n                <div>\r\n                        Nazwisko: {userProfile.lastName}\r\n                </div>\r\n                <div>\r\n                        Nazwa użytkownika: {userProfile.userName}\r\n                </div>\r\n                <div>\r\n                        Email: {userProfile.email}\r\n                </div>\r\n                <div>\r\n                        Admin: nie\r\n                </div>\r\n                <div>\r\n                        Premium: nie\r\n                </div>\r\n            </div>\r\n\r\n\r\n        <div className=\"user-posts\">\r\n          <header className=\"user-posts-header-wrapper\">\r\n          {post !== null || post !== [] ? (\r\n              <div></div>\r\n            ) : (\r\n              <p className=\"user-posts-header\">\r\n                Brak postów\r\n              </p>\r\n            )}\r\n          </header>\r\n            <UserPostsWrapper posts={users.profilePosts} />\r\n        </div>\r\n      </div>\r\n    </StyledContainerAccount>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users,\r\n  userProfile: state.users.userProfile,\r\n  posts: state.posts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserById, getUserPostsById })(\r\n  UserProfile\r\n);\r\n\r\n\r\nconst StyledContainerAccount = styled.div`\r\n  max-width: 700px;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n    img {\r\n      width: 150px;\r\n      height: 150px;\r\n      margin-left: 10px;\r\n    }\r\n`","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\Topics.js",["215","216","217","218","219","220"],"import React, { useState, useEffect } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {getPosts, getMostRecentPosts, getMostCommentedPosts, theMostLikedPosts, searchTopics  } from '../actions/posts.actions';\r\n\r\nimport TopicPostsWrapper from './TopicPosts/TopicPostsWrapper'\r\nimport './scss/Topics/topics.css';\r\nimport Spinner from '../Spinner'\r\nconst Topics = ({getPosts, getMostRecentPosts, getMostCommentedPosts, theMostLikedPosts, searchTopics, posts, none}) => {\r\n\r\n    let [dataFromSearch, setDataFromSearch] = useState('')\r\n    let [topicsSortType, setTopicsSortType] = useState({\r\n        isTheOldest: false,\r\n        isTheMostRecent: true,\r\n        isTheMostCommented: false,\r\n        isTheMostLiked: false,\r\n    })\r\n\r\n    let {isTheOldest, isTheMostRecent,\r\n        isTheMostCommented,\r\n        isTheMostLiked} = topicsSortType\r\n\r\n    const onChange = (e) => {setDataFromSearch(e.target.value)};\r\n\r\n    const searchForTopics = dataFromSearch => {\r\n     \r\n        if(dataFromSearch !== '' || dataFromSearch !== null) {\r\n            searchTopics(dataFromSearch)\r\n            setDataFromSearch('')\r\n\r\n        } else {\r\n            setTopicsSortType({isTheMostRecent: true, isTheMostCommented: false, isTheMostLiked:false , isTheOldest: false})\r\n            getMostRecentPosts()\r\n            \r\n        }\r\n    }\r\n\r\n        useEffect(() => {\r\n            if(isTheOldest) getPosts();\r\n            else if (isTheMostCommented) getMostCommentedPosts();\r\n            else if (isTheMostLiked) theMostLikedPosts();\r\n            else getMostRecentPosts();\r\n\r\n        }, [])\r\n\r\n        const changeTopics = (changedType) => {\r\n            console.log(changedType)\r\n            if(changedType === \"isTheMostLiked\") {\r\n                setTopicsSortType({\r\n                    isTheMostRecent: false, \r\n                    isTheMostCommented: false, \r\n                    isTheMostLiked:true, \r\n                    isTheOldest: false\r\n                 });\r\n                 theMostLikedPosts();\r\n            }\r\n            \r\n             else if(changedType === \"isTheOldest\"){\r\n                setTopicsSortType({\r\n                    isTheMostRecent: false, \r\n                    isTheMostCommented: false, \r\n                    isTheMostLiked:false, \r\n                    isTheOldest: true\r\n                 });\r\n                 getPosts();\r\n             }\r\n             \r\n             else if(changedType === \"isTheMostCommented\"){\r\n                setTopicsSortType({\r\n                    isTheMostRecent: false, \r\n                    isTheMostCommented: true, \r\n                    isTheMostLiked:false, \r\n                    isTheOldest: false\r\n                 });\r\n                 getMostCommentedPosts();\r\n             }\r\n             \r\n             else {\r\n                setTopicsSortType({\r\n                    isTheMostRecent: true, \r\n                    isTheMostCommented: false, \r\n                    isTheMostLiked:false, \r\n                    isTheOldest: false\r\n                 });\r\n                 getMostRecentPosts();\r\n             }\r\n        }\r\n\r\n        \r\n    return ( <div>\r\n            <div className=\"search\"  className={none?'main':'main'} style={{display: none?'none':'grid'}}>\r\n              \r\n                <div>\r\n                    <input type=\"checkbox\" value={isTheOldest} checked={isTheOldest} onChange={() => changeTopics(\"isTheOldest\")}/>\r\n                    <span onClick={() => changeTopics(\"isTheOldest\")}>Najstarszy</span>\r\n                </div>\r\n                <div>\r\n                    <input type=\"checkbox\" value={isTheMostRecent} checked={isTheMostRecent}  onChange={() => changeTopics(\"isTheMostRecent\")}/>\r\n                    <span  onClick={() => changeTopics(\"isTheMostRecent\")}>Najnowszy</span>\r\n                </div>\r\n                <div>\r\n                    <input type=\"checkbox\" value={isTheMostLiked} checked={isTheMostLiked} onChange={() => changeTopics(\"isTheMostLiked\")}/>\r\n                    <span onClick={() => changeTopics(\"isTheMostLiked\")}>Lubiany</span>\r\n                </div>\r\n                <div>\r\n                    <input type=\"checkbox\" value={isTheMostCommented} checked={isTheMostCommented}  onChange={() => changeTopics(\"isTheMostCommented\")}/>\r\n                    <span onClick={() => changeTopics(\"isTheMostCommented\")}>Komentowany</span>\r\n                </div>\r\n                {/* <form action=\"\">\r\n                    <textarea value={dataFromSearch} onChange={(e) => onChange(e)}/>\r\n                    <button onClick={() => searchForTopics(dataFromSearch)}>\r\n                        Wyszukaj\r\n                    </button>\r\n                   \r\n                </form> */}\r\n                \r\n                </div>\r\n                <div className=\"topics-wrapper\">\r\n                <TopicPostsWrapper\r\n                    isTheMostCommented={isTheMostCommented}\r\n                    isTheOldest={isTheOldest}\r\n                    isTheMostRecent={isTheMostRecent}\r\n                    isTheMostLiked={isTheMostLiked}\r\n                    posts={posts.posts}\r\n                />\r\n           \r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts,\r\n})\r\nconst mapDispatchToprops = {\r\n    getPosts, getMostRecentPosts, getMostCommentedPosts, theMostLikedPosts, searchTopics \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(Topics)\r\n","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\TopicPosts\\TopicPostsWrapper.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\TopicPosts\\TopicPost.js",["221"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addLike } from \"../../actions/posts.actions\";\r\nimport { removeLikeFromPost } from \"../../actions/posts.actions\";\r\nimport Spinner from '../../Spinner';\r\nconst TopicPost = ({\r\n  isTheOldest,\r\n  isTheMostCommented,\r\n  isTheMostRecent,\r\n  isTheMostLiked,\r\n  post,\r\n  removeLikeFromPost,\r\n  addLike,\r\n  auth,\r\n  posts\r\n}) => {\r\n  return post === null || post === [] ? (<div className=\"all-page-wrapper\">\r\n  <Spinner />\r\n</div>) : (<div className=\"topic-wrapper\">\r\n      \r\n      <div>{post.image&&<img className=\"topic-section-image\" src={post.image} alt=\"user image\"/>}</div>\r\n\r\n    <div className=\"topic-user\">\r\n      <img src={post.avatar} className=\"topic-avatar\" alt=\"avatar\" />\r\n      <Link to={`/users/user/${post.user}`}><p className=\"post-name\">{post.name}</p></Link>\r\n      <div className=\"topic-date\">\r\n      <Moment format=\"HH:mm YYYY-MM-DD\">{post.data}</Moment>\r\n    </div>\r\n    </div>\r\n    <div className=\"title\">\r\n       {post.title}\r\n    </div>\r\n    <div className=\"topic-section\">\r\n      <p>{post.textOfThePost}</p>\r\n    \r\n      <div className=\"topic-section-links\">\r\n\r\n        <div className=\"like-posts\">\r\n        <div>\r\n          <i className=\"fas fa-thumbs-up like-post\" style={{color:'#026ee2'}}></i>\r\n          <i className=\"fab fa-gratipay heart-post\" style={{color:'red'}}></i>\r\n          <span className=\"like-post-comment-top\">{post.likes.length} </span>\r\n        </div>\r\n\r\n        <span className=\"like-post-comment\"> <Link to={`/topics/topic/${post._id}`}> Komentarze: {post.comments.length}</Link></span>\r\n        </div>\r\n\r\n        <div className=\"like-section\" style={{ color: \"rgb(42, 9, 9)\" }}>\r\n     \r\n          <div className=\"like-container\"\r\n            onClick={() => {\r\n              if (post.likes.find((like) => like.user === auth.user._id)) {\r\n                \r\n                post.likes.find((like) =>\r\n                  removeLikeFromPost(\r\n                    post._id,\r\n                    like._id,\r\n                    isTheOldest,\r\n                    isTheMostRecent,\r\n                    isTheMostCommented,\r\n                    isTheMostLiked\r\n                  )\r\n                );\r\n              } else if (!auth.user.name){\r\n                alert(\"Zaloguj się\")\r\n              } else {\r\n                addLike(\r\n                  post._id,\r\n                  isTheOldest,\r\n                  isTheMostRecent,\r\n                  isTheMostCommented,\r\n                  isTheMostLiked\r\n                );\r\n              }\r\n            }}\r\n          >\r\n              <div className={\r\n                post.likes.find((like) => like.user === auth.user._id)\r\n                  ? \"like\"\r\n                  : \"none\"\r\n              }></div>\r\n              \r\n            <i\r\n              className={\r\n                post.likes.find((like) => like.user === auth.user._id)\r\n                  ? \"fas fa-thumbs-up active-like\"\r\n                  : \"far fa-thumbs-up\"\r\n              }\r\n            ></i>\r\n            <span className={\r\n                post.likes.find((like) => like.user === auth.user._id)\r\n                  ? \"like-user-title\" : \"comment-user-title\"\r\n              } >Lubię to!</span>\r\n          </div>\r\n          \r\n         \r\n          <div className=\"topic-comment-section\">\r\n          <Link to={`/topics/topic/${post._id}`}  style={{textDecoration:'none', color:'black'}}>\r\n            <i className=\"far fa-comment\"></i>\r\n            <span className=\"comment-user-title\">Dodaj komentarz</span>\r\n            {/* <div>{post.comments.length}</div> liczba komentarzy */ }\r\n          </Link>\r\n            \r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"link-to-post-page-button\">\r\n          <Link to={`/topics/topic/${post._id}`}>Więcej <i className=\"fas fa-long-arrow-alt-right\"></i></Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    \r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  posts: state.posts,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addLike,\r\n  removeLikeFromPost,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicPost);","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\reducers\\posts.reducer.js",["222","223","224","225","226","227","228","229"],"import {MAKE_POST ,POST_ERROR ,GET_USER_POSTS ,REMOVE_POST ,GET_POSTS ,GET_POST ,CLEAR_POSTS ,CLEAR_POST, SEARCH_TOPICS ,MOST_LIKED_POSTS\r\n     ,MOST_COMMENTED ,ADD_LIKE ,THE_MOST_RECENT_POSTS ,REMOVE_LIKE ,ADD_COMMENT ,GET_POST_BY_USER_ID ,LIKE_COMMENT ,REMOVE_LIKE_FROM_COMMENT, REMOVE_COMMENT} from '../constants/posts.constants';\r\n\r\nconst initialState = {\r\n    posts: {},\r\n    post: null,\r\n    isLoading: false,\r\n    errors: {},\r\n};\r\nconst posts = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case MAKE_POST:\r\n        case GET_POST: \r\n        case REMOVE_LIKE_FROM_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: payload,\r\n                isLoading: false,\r\n                errors: {},\r\n            }\r\n        case GET_POSTS:\r\n        case THE_MOST_RECENT_POSTS:\r\n        case SEARCH_TOPICS:\r\n        case MOST_COMMENTED:\r\n        case MOST_LIKED_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                errors: {},\r\n                isLoading: false,\r\n            }\r\n        case CLEAR_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: [],\r\n                errors: {},\r\n            }\r\n        case CLEAR_POST: {\r\n            return {\r\n                ...state,\r\n                post: null,\r\n                errors: {},\r\n            }\r\n        }\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: payload,\r\n                isLoading: true,\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default posts; ","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\TopicsPage.js",["230","231"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { clearPost, getPost, removeLikeFromPost, addLikeToTopicPage, createComment } from '../actions/posts.actions';\r\nimport Spinner from '../Spinner';\r\nimport Moment from 'react-moment';\r\nimport CommentsWrapper from './Comments/CommentsWrapper';\r\nimport './scss/TopicsPage/topicsPage.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TopicsPage = ({ clearPost, removeLikeFromPost, getPost, match, auth, post, addLikeToTopicPage, createComment }) => {\r\n\r\n    useEffect(() => {\r\n        clearPost()\r\n        getPost(match.params.topic_id)\r\n    }, [])\r\n\r\n    let [textOfTheComment, setTextOfTheComment] = useState('')\r\n    const onChange = (e) => setTextOfTheComment(e.target.value)\r\n\r\n\r\n    return post === null || post === [] ? (<div className=\"all-page-wrapper\">\r\n        <Spinner />\r\n    </div>) : (\r\n            <div className=\"topic-container\">\r\n                <div className=\"topic-wrapper\">\r\n\r\n\r\n                    <div className=\"topic-user-container\">\r\n                        <img className=\"avatar\" src={post.avatar} alt=\"avatar\" />\r\n                        <Link to={`/users/user/${post.user}`}><p>{post.name}</p></Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"topic-section\">\r\n\r\n                    <div className=\"title\">{post.title}</div>\r\n                    <div className=\"link-user\">\r\n                        <Link to={`/users/user/${post.user}`}><b>{post.name}</b></Link>\r\n                        <Moment format=\"HH:mm YYYY-MM-DD\">{post.data}</Moment>\r\n                    </div>\r\n                    <div>\r\n                        {post.image && <img className=\"user-image\" src={post.image} />}\r\n                    </div>\r\n                    <p>{post.textOfThePost}</p>\r\n\r\n                    <div className=\"like-posts\">\r\n                        <div>\r\n                            <i className=\"fas fa-thumbs-up like-post\" style={{ color: '#026ee2' }}></i>\r\n                            <i className=\"fab fa-gratipay heart-post\" style={{ color: 'red' }}></i>\r\n                            <span className=\"like-post-comment-top\">{post.likes.length} </span>\r\n                        </div>\r\n                        <span className=\"like-post-comment\"> Komentarzy: {post.comments.length}</span>\r\n                    </div>\r\n                    <div className=\"topic-section link\">\r\n                        <div className={\r\n                            post.likes.find((like) => like.user === auth.user._id)\r\n                                ? \"like\"\r\n                                : \"none\"\r\n                        }></div>\r\n                        <p onClick={() => {\r\n                            if (post.likes.find(like => like.user === auth.user._id)) {\r\n                                post.likes.find(like => removeLikeFromPost(post._id, like._id))\r\n                            } else if (!auth.user.name) {\r\n                                alert(\"Zaloguj się\")\r\n                            } else {\r\n                                addLikeToTopicPage(post._id)\r\n                            }\r\n                        }}>\r\n                            <i\r\n                                className={\r\n                                    post.likes.find(like => like.user === auth.user._id) ? \"fas fa-thumbs-up active\" : \"far fa-thumbs-up no-active\"\r\n                                }\r\n                            ></i>\r\n\r\n                            <span className={\r\n                                post.likes.find((like) => like.user === auth.user._id)\r\n                                    ? \"like-user-title\" : \"comment-user-title\"\r\n                            }>Lubię to!</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <form style={{ display: auth.isLoggedIn ? \"grid\" : \"none\" }} className=\"search-topic-wrapper\">\r\n\r\n                        <input placeholder=\"Napisz komentarz...\" value={textOfTheComment} onChange={(e) => onChange(e)} />\r\n                        <button onClick={(e) => {\r\n                            e.preventDefault();\r\n                            createComment(textOfTheComment, post._id)\r\n                            setTextOfTheComment('')\r\n                        }}> Dodaj komentarz</button>\r\n                    </form>\r\n                </div>\r\n                {console.log(post.comments)}\r\n                {post.comments.length > 0 && <div className=\"topic-comment-container\">\r\n                    <CommentsWrapper comments={post.comments} />\r\n                </div>}\r\n               \r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapDispatchToProps = ({\r\n    clearPost,\r\n    getPost,\r\n    removeLikeFromPost,\r\n    addLikeToTopicPage,\r\n    createComment,\r\n})\r\nconst mapStateToProps = (state) => ({\r\n    post: state.posts.post,\r\n    auth: state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicsPage)\r\n","C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\Comments\\CommentsWrapper.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\pages\\Comments\\Comment.js",[],"C:\\Users\\WIN10\\Documents\\visualstudiocode\\React\\full\\client\\src\\reducers\\index.js",[],{"ruleId":"232","severity":1,"message":"233","line":4,"column":8,"nodeType":"234","messageId":"235","endLine":4,"endColumn":20},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"232","severity":1,"message":"240","line":1,"column":45,"nodeType":"234","messageId":"235","endLine":1,"endColumn":55},{"ruleId":"232","severity":1,"message":"241","line":2,"column":111,"nodeType":"234","messageId":"235","endLine":2,"endColumn":120},{"ruleId":"232","severity":1,"message":"242","line":2,"column":122,"nodeType":"234","messageId":"235","endLine":2,"endColumn":140},{"ruleId":"232","severity":1,"message":"243","line":7,"column":8,"nodeType":"234","messageId":"235","endLine":7,"endColumn":14},{"ruleId":"232","severity":1,"message":"244","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":14},{"ruleId":"245","severity":1,"message":"246","line":26,"column":21,"nodeType":"247","messageId":"248","endLine":26,"endColumn":544},{"ruleId":"236","replacedBy":"249"},{"ruleId":"238","replacedBy":"250"},{"ruleId":"232","severity":1,"message":"241","line":6,"column":5,"nodeType":"234","messageId":"235","endLine":6,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":99,"column":11,"nodeType":"253","endLine":99,"endColumn":35},{"ruleId":"251","severity":1,"message":"252","line":170,"column":13,"nodeType":"253","endLine":170,"endColumn":37},{"ruleId":"232","severity":1,"message":"254","line":2,"column":5,"nodeType":"234","messageId":"235","endLine":2,"endColumn":20},{"ruleId":"232","severity":1,"message":"255","line":12,"column":23,"nodeType":"234","messageId":"235","endLine":12,"endColumn":37},{"ruleId":"232","severity":1,"message":"256","line":1,"column":32,"nodeType":"234","messageId":"235","endLine":1,"endColumn":46},{"ruleId":"232","severity":1,"message":"257","line":2,"column":81,"nodeType":"234","messageId":"235","endLine":2,"endColumn":100},{"ruleId":"232","severity":1,"message":"258","line":4,"column":24,"nodeType":"234","messageId":"235","endLine":4,"endColumn":32},{"ruleId":"232","severity":1,"message":"259","line":1,"column":21,"nodeType":"234","messageId":"235","endLine":1,"endColumn":29},{"ruleId":"232","severity":1,"message":"260","line":1,"column":31,"nodeType":"234","messageId":"235","endLine":1,"endColumn":43},{"ruleId":"232","severity":1,"message":"261","line":1,"column":45,"nodeType":"234","messageId":"235","endLine":1,"endColumn":57},{"ruleId":"262","severity":1,"message":"263","line":12,"column":7,"nodeType":"264","endLine":12,"endColumn":9,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":19,"column":56,"nodeType":"268","endLine":19,"endColumn":96},{"ruleId":"262","severity":1,"message":"269","line":12,"column":8,"nodeType":"264","endLine":12,"endColumn":10,"suggestions":"270"},{"ruleId":"232","severity":1,"message":"271","line":4,"column":29,"nodeType":"234","messageId":"235","endLine":4,"endColumn":41},{"ruleId":"262","severity":1,"message":"272","line":20,"column":6,"nodeType":"264","endLine":20,"endColumn":8,"suggestions":"273"},{"ruleId":"232","severity":1,"message":"274","line":7,"column":8,"nodeType":"234","messageId":"235","endLine":7,"endColumn":15},{"ruleId":"232","severity":1,"message":"275","line":10,"column":10,"nodeType":"234","messageId":"235","endLine":10,"endColumn":24},{"ruleId":"232","severity":1,"message":"276","line":22,"column":11,"nodeType":"234","messageId":"235","endLine":22,"endColumn":19},{"ruleId":"232","severity":1,"message":"277","line":24,"column":11,"nodeType":"234","messageId":"235","endLine":24,"endColumn":26},{"ruleId":"262","severity":1,"message":"278","line":43,"column":12,"nodeType":"264","endLine":43,"endColumn":14,"suggestions":"279"},{"ruleId":"251","severity":1,"message":"252","line":90,"column":38,"nodeType":"253","endLine":90,"endColumn":68},{"ruleId":"266","severity":1,"message":"267","line":23,"column":25,"nodeType":"268","endLine":23,"endColumn":97},{"ruleId":"232","severity":1,"message":"256","line":1,"column":32,"nodeType":"234","messageId":"235","endLine":1,"endColumn":46},{"ruleId":"232","severity":1,"message":"280","line":1,"column":48,"nodeType":"234","messageId":"235","endLine":1,"endColumn":59},{"ruleId":"232","severity":1,"message":"281","line":2,"column":23,"nodeType":"234","messageId":"235","endLine":2,"endColumn":31},{"ruleId":"232","severity":1,"message":"282","line":2,"column":56,"nodeType":"234","messageId":"235","endLine":2,"endColumn":67},{"ruleId":"232","severity":1,"message":"283","line":2,"column":69,"nodeType":"234","messageId":"235","endLine":2,"endColumn":80},{"ruleId":"232","severity":1,"message":"257","line":2,"column":82,"nodeType":"234","messageId":"235","endLine":2,"endColumn":101},{"ruleId":"232","severity":1,"message":"284","line":2,"column":103,"nodeType":"234","messageId":"235","endLine":2,"endColumn":115},{"ruleId":"232","severity":1,"message":"285","line":2,"column":143,"nodeType":"234","messageId":"235","endLine":2,"endColumn":157},{"ruleId":"262","severity":1,"message":"286","line":15,"column":8,"nodeType":"264","endLine":15,"endColumn":10,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":41,"column":40,"nodeType":"268","endLine":41,"endColumn":87},"no-unused-vars","'RegisterPage' is defined but never used.","Identifier","unusedVar","no-native-reassign",["290"],"no-negated-in-lhs",["291"],"'AUTH_ERROR' is defined but never used.","'GET_USERS' is defined but never used.","'SEARCH_BY_USERNAME' is defined but never used.","'Footer' is defined but never used.","'Link' is defined but never used.","no-control-regex","Unexpected control character(s) in regular expression: \\x00, \\x0d, \\x00, \\x00, \\x0d, \\x00, \\x00, \\x0d, \\x00, \\x00, \\x0d, \\x00.","Literal","unexpected",["290"],["291"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'CHANGE_PASSWORD' is defined but never used.","'setIsSubmitted' is assigned a value but never used.","'GET_USER_POSTS' is defined but never used.","'GET_POST_BY_USER_ID' is defined but never used.","'getUsers' is defined but never used.","'GET_USER' is defined but never used.","'SEARCH_USERS' is defined but never used.","'CHANGE_EMAIL' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserPosts'. Either include it or remove the dependency array. If 'getUserPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["292"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["293"],"'getUserPosts' is defined but never used.","React Hook useEffect has missing dependencies: 'getUserById', 'getUserPostsById', and 'match.params.user_id'. Either include them or remove the dependency array. If 'getUserById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["294"],"'Spinner' is defined but never used.","'dataFromSearch' is assigned a value but never used.","'onChange' is assigned a value but never used.","'searchForTopics' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getMostCommentedPosts', 'getMostRecentPosts', 'getPosts', 'isTheMostCommented', 'isTheMostLiked', 'isTheOldest', and 'theMostLikedPosts'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["295"],"'REMOVE_POST' is defined but never used.","'ADD_LIKE' is defined but never used.","'REMOVE_LIKE' is defined but never used.","'ADD_COMMENT' is defined but never used.","'LIKE_COMMENT' is defined but never used.","'REMOVE_COMMENT' is defined but never used.","React Hook useEffect has missing dependencies: 'clearPost', 'getPost', and 'match.params.topic_id'. Either include them or remove the dependency array. If 'clearPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["296"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},"Update the dependencies array to be: [getUserPosts]",{"range":"307","text":"308"},"Update the dependencies array to be: [getUsers]",{"range":"309","text":"310"},"Update the dependencies array to be: [getUserById, getUserPostsById, match.params.user_id]",{"range":"311","text":"312"},"Update the dependencies array to be: [getMostCommentedPosts, getMostRecentPosts, getPosts, isTheMostCommented, isTheMostLiked, isTheOldest, theMostLikedPosts]",{"range":"313","text":"314"},"Update the dependencies array to be: [clearPost, getPost, match.params.topic_id]",{"range":"315","text":"316"},[414,416],"[getUserPosts]",[373,375],"[getUsers]",[599,601],"[getUserById, getUserPostsById, match.params.user_id]",[1577,1579],"[getMostCommentedPosts, getMostRecentPosts, getPosts, isTheMostCommented, isTheMostLiked, isTheOldest, theMostLikedPosts]",[646,648],"[clearPost, getPost, match.params.topic_id]"]